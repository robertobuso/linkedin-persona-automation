"""add_user_content_preferences_table

Revision ID: 1ee0fb226a22
Revises: add_content_preferences
Create Date: 2025-05-29 12:37:23.213001

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ee0fb226a22'
down_revision: Union[str, None] = 'add_content_preferences'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_content_preferences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_role', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('experience_level', sa.String(length=50), nullable=True),
    sa.Column('company_size', sa.String(length=50), nullable=True),
    sa.Column('primary_interests', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('secondary_interests', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('topics_to_avoid', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('custom_prompt', sa.Text(), nullable=True),
    sa.Column('content_style_preferences', sa.String(length=50), nullable=True),
    sa.Column('content_types', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('min_relevance_score', sa.Float(), nullable=True),
    sa.Column('max_articles_per_day', sa.Integer(), nullable=True),
    sa.Column('preferred_content_length', sa.String(length=20), nullable=True),
    sa.Column('min_word_count', sa.Integer(), nullable=True),
    sa.Column('max_word_count', sa.Integer(), nullable=True),
    sa.Column('companies_to_follow', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('authors_to_follow', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('sources_to_prioritize', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('language_preference', sa.String(length=10), nullable=True),
    sa.Column('content_freshness_hours', sa.Integer(), nullable=True),
    sa.Column('check_frequency', sa.String(length=20), nullable=True),
    sa.Column('linkedin_post_style', sa.String(length=50), nullable=True),
    sa.Column('include_industry_hashtags', sa.Boolean(), nullable=True),
    sa.Column('max_hashtags', sa.Integer(), nullable=True),
    sa.Column('learn_from_interactions', sa.Boolean(), nullable=True),
    sa.Column('feedback_weight', sa.Float(), nullable=True),
    sa.Column('preferences_version', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_content_preferences_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_content_preferences'))
    )
    op.create_index(op.f('ix_user_content_preferences_id'), 'user_content_preferences', ['id'], unique=False)
    op.create_index(op.f('ix_user_content_preferences_user_id'), 'user_content_preferences', ['user_id'], unique=False)
    op.drop_index('ix_content_items_source_status', table_name='content_items')
    op.drop_constraint('uq_content_items_url', 'content_items', type_='unique')
    op.drop_index('ix_content_items_url', table_name='content_items')
    op.create_index(op.f('ix_content_items_url'), 'content_items', ['url'], unique=True)
    op.drop_column('content_items', 'user_relevance_scores')
    op.drop_column('content_items', 'selection_metadata')
    op.add_column('content_selections', sa.Column('selection_type', sa.String(length=50), nullable=True))
    op.add_column('content_selections', sa.Column('selected_article_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=False))
    op.add_column('content_selections', sa.Column('selection_scores', postgresql.JSONB(astext_type=sa.Text()), nullable=False))
    op.add_column('content_selections', sa.Column('selection_reasons', postgresql.JSONB(astext_type=sa.Text()), nullable=False))
    op.add_column('content_selections', sa.Column('articles_that_became_drafts', sa.Integer(), nullable=True))
    op.add_column('content_selections', sa.Column('articles_that_were_published', sa.Integer(), nullable=True))
    op.add_column('content_selections', sa.Column('avg_engagement_score', sa.Float(), nullable=True))
    op.alter_column('content_selections', 'source_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('content_selections', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_content_selections_user_date', table_name='content_selections')
    op.create_index(op.f('ix_content_selections_id'), 'content_selections', ['id'], unique=False)
    op.create_index(op.f('ix_content_selections_selection_date'), 'content_selections', ['selection_date'], unique=False)
    op.create_index(op.f('ix_content_selections_user_id'), 'content_selections', ['user_id'], unique=False)
    op.drop_index('ix_content_sources_user_active', table_name='content_sources')
    op.drop_index('ix_engagement_opportunities_status_scheduled', table_name='engagement_opportunities')
    op.drop_index('ix_engagement_opportunities_user_status', table_name='engagement_opportunities')
    op.drop_index('ix_post_drafts_user_status', table_name='post_drafts')
    op.alter_column('users', 'content_preferences',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               existing_nullable=False)
    op.drop_index('idx_users_content_preferences', table_name='users', postgresql_using='gin')
    op.drop_constraint('uq_users_email', 'users', type_='unique')
    op.drop_index('ix_users_email', table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_unique_constraint('uq_users_email', 'users', ['email'])
    op.create_index('idx_users_content_preferences', 'users', ['content_preferences'], unique=False, postgresql_using='gin')
    op.alter_column('users', 'content_preferences',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'{}'::jsonb"),
               existing_nullable=False)
    op.create_index('ix_post_drafts_user_status', 'post_drafts', ['user_id', 'status'], unique=False)
    op.create_index('ix_engagement_opportunities_user_status', 'engagement_opportunities', ['user_id', 'status'], unique=False)
    op.create_index('ix_engagement_opportunities_status_scheduled', 'engagement_opportunities', ['status', 'scheduled_for'], unique=False)
    op.create_index('ix_content_sources_user_active', 'content_sources', ['user_id', 'is_active'], unique=False)
    op.drop_index(op.f('ix_content_selections_user_id'), table_name='content_selections')
    op.drop_index(op.f('ix_content_selections_selection_date'), table_name='content_selections')
    op.drop_index(op.f('ix_content_selections_id'), table_name='content_selections')
    op.create_index('idx_content_selections_user_date', 'content_selections', ['user_id', 'selection_date'], unique=False)
    op.alter_column('content_selections', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('content_selections', 'source_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_column('content_selections', 'avg_engagement_score')
    op.drop_column('content_selections', 'articles_that_were_published')
    op.drop_column('content_selections', 'articles_that_became_drafts')
    op.drop_column('content_selections', 'selection_reasons')
    op.drop_column('content_selections', 'selection_scores')
    op.drop_column('content_selections', 'selected_article_ids')
    op.drop_column('content_selections', 'selection_type')
    op.add_column('content_items', sa.Column('selection_metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('content_items', sa.Column('user_relevance_scores', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_content_items_url'), table_name='content_items')
    op.create_index('ix_content_items_url', 'content_items', ['url'], unique=False)
    op.create_unique_constraint('uq_content_items_url', 'content_items', ['url'])
    op.create_index('ix_content_items_source_status', 'content_items', ['source_id', 'status'], unique=False)
    op.drop_index(op.f('ix_user_content_preferences_user_id'), table_name='user_content_preferences')
    op.drop_index(op.f('ix_user_content_preferences_id'), table_name='user_content_preferences')
    op.drop_table('user_content_preferences')
    # ### end Alembic commands ###
